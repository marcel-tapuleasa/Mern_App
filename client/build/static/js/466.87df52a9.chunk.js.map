{"version":3,"file":"static/js/466.87df52a9.chunk.js","mappings":"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","sources":["components/hotel/NewHotelForm.js"],"sourcesContent":["import React, { useContext} from 'react';\nimport axios from 'axios';\nimport {useNavigate} from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { withStyles } from '@mui/styles';\n\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\n\nimport { UserContext } from '../../context/UserContext';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { toast } from 'react-toastify';\n\n\n\n\nconst styles = {\n  main: {\n    padding: '32px',\n    // width: '30%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'rgb(6, 122, 184)',\n    // borderRadius: 3,\n    backgroundColor: 'white',\n    boxShadow: '5px 5px 20px -4px #EACDF2'\n\n  },\n  sloganText: {\n    padding: '40px',\n    color: '3C4257',\n    textAlign: 'center',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginTop: '30px'\n\n  },\n  inputField: {\n  }\n}\n\n    // const FILE_SIZE = 160 * 1024;\n    // const SUPPORTED_FORMATS = [\n    //   \"image/jpg\",\n    //   \"image/jpeg\",\n    //   \"image/png\"\n    // ];\n\nconst validationSchema = yup.object().shape({\n    title: yup\n      .string('Enter Hotel Name')\n      .required('Name is required'),\n    location: yup\n      .string('Enter location')\n      .required('Location is required'),\n    description: yup\n    .string('Enter description')\n    .min(20, 'Description shold be of minimum 20 characters length')\n    .required('Description is required'),\n    price: yup\n    .number('Enter price')\n    .min(0, 'Price should be greater than 0')\n    .required('Price is required'),\n    images: yup.mixed()\n    // .test(\n    //   'fileSize', \n    //   'File too large',\n    //   value => value && value.size <= FILE_SIZE\n    // )\n    // .test(\n    //   'fileFormat',\n    //   'Unsupported file format',\n    //   value => value && SUPPORTED_FORMATS.includes(value.type)\n    // )\n  });\n\nfunction NewHotelForm (props) {\n\n \n\n  const [userContext, setUserContext] = useContext(UserContext);\n\n\n  let navigate = useNavigate();\n  const {classes} = props;\n\n\n  const onSubmit = async (values) => {\n\n    const {title, location, description, price, images} = values;\n\n    \n    const formData = new FormData();\n\n        // formData.append('images', images);\n        images.forEach((image, index) => {formData.append('images', images[index])});\n        formData.append('title', title);\n        formData.append('location', location);\n        formData.append('description', description);\n        formData.append('price', price);\n\n\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${userContext.token}`,\n        \"Cookie\": 'refreshToken'\n      },\n      withCredentials: true\n      \n    }\n    const promise = axios.post('https://hoteltips.onrender.com/hotels/new', formData, config );\n\n    await toast.promise(promise, {\n      pending: {\n       render: 'Saving hotel details',\n       // disable the delay for pending state\n       delay: undefined\n      },\n      success: {render: 'Hotel saved successfully!', delay: 100},\n      error: 'Something went wrong.',\n    }, {\n    delay: 500\n    });\n  \n    setTimeout(() => {navigate('/hotels')}, 2000)\n    // {title: title, location: location, description: description, price: price}\n};\n\n\n\nconst formik = useFormik({\n    initialValues: {title: '', location: '', description: '', price: '', images:[]},\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit\n});\n\nreturn(\n  <form\n  encType='multipart/form-data'\n            noValidate\n            onSubmit={formik.handleSubmit}>\n\n    {/* <ThemeProvider theme={theme}> */}\n      {/* <CssBaseline /> */}\n            <Box\n            // component='form'\n            // encType='multipart/form-data'\n            // noValidate\n            // onSubmit={formik.handleSubmit}\n            className={classes.main}\n            sx={{\n              width: {sm:'80%', md:'50%', lg: '40%', xl:'30%'}, \n              margin: {xs: '5rem auto', sm: '7rem auto', lg: '12rem auto', xl:'12rem auto'},\n              borderRadius: {xs: '4%', lg:'7%'}\n          }}\n            >\n              \n                <Typography className={classes.sloganText}>Enlist your Hotel with us</Typography>\n              <TextField\n                fullWidth\n                sx={{mt:'32px'}}\n                variant='outlined'\n                label='Hotel Name'\n                name='title'\n                value={formik.values.title}\n                placeholder='Enter Hotel Name'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n                />\n                \n            \n             <TextField\n                fullWidth\n                className={classes.inputField}\n                variant='outlined'\n                sx={{mt:'32px',}}\n                label='Location'\n                name='location'\n                value={formik.values.location}\n                placeholder='Enter Location'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.location && Boolean(formik.errors.location)}\n                helperText={formik.touched.location && formik.errors.location}\n                />\n             <TextField\n                sx={{mt:'32px'}}\n                fullWidth\n                className={classes.inputField}\n                variant='outlined'\n                label='Description'\n                name='description'\n                value={formik.values.description}\n                placeholder='Enter Description'\n                multiline\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.description && Boolean(formik.errors.description)}\n                helperText={formik.touched.description && formik.errors.description}\n                />\n\n            <div style ={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width:'100%', marginTop:'45px' }}>\n              <TextField\n                  sx={{alignSelf: 'flex-start'}}\n                  id=\"filled-number\"\n                  name='price'\n                  value={formik.values.price}\n                  label=\"Price/night (EUR)\"\n                  type=\"number\"\n                  InputLabelProps={{\n                  shrink: true,\n                  }}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.price && Boolean(formik.errors.price)}\n                  helperText={formik.touched.price && formik.errors.price}\n              />         \n              \n              <Button sx={{borderRadius:'5%', zIndex: 1}}  size='small' color='info' variant=\"outlined\" component=\"label\" startIcon={<PhotoCamera/>}>\n                  Choose Photos\n                  <input\n                  hidden \n                  type='file'\n                  name='images'\n                  accept='image/*'\n                  multiple\n                  onChange={(e) => formik.setFieldValue('images', Array.from(e.target.files))}/>\n              </Button>\n            </div>\n\n\n                <Button\n                    sx={{mt:'32px'}}\n                    fullWidth\n                    variant='contained'\n                    type='submit'>Add Hotel\n                </Button>\n            \n        </Box>\n    {/* </ThemeProvider>   */}\n    </form>      \n)\n\n}\n\nexport default withStyles(styles)(NewHotelForm);\n"],"names":["validationSchema","yup","shape","title","required","location","description","min","price","images","withStyles","main","padding","display","flexDirection","alignItems","justifyContent","color","backgroundColor","boxShadow","sloganText","textAlign","fontSize","fontWeight","marginTop","inputField","props","useContext","UserContext","userContext","navigate","useNavigate","classes","onSubmit","values","formData","FormData","forEach","image","index","append","config","headers","token","withCredentials","promise","axios","toast","pending","render","delay","undefined","success","error","setTimeout","formik","useFormik","initialValues","validateOnBlur","encType","noValidate","handleSubmit","className","sx","width","sm","md","lg","xl","margin","xs","borderRadius","fullWidth","mt","variant","label","name","value","placeholder","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","multiline","style","alignSelf","id","type","InputLabelProps","shrink","zIndex","size","component","startIcon","hidden","accept","multiple","e","setFieldValue","Array","from","target","files"],"sourceRoot":""}